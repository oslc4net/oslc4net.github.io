name: DocFX build and deploy

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:
  schedule:
    # weekly build to keep API docs up to date
    - cron: "15 03 * * THU"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build-docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
          show-progress: false
          persist-credentials: true
          path: repo
    - name: Checkout
      uses: actions/checkout@v4
      with:
          show-progress: false
          persist-credentials: false
          repository: oslc/oslc4net
          path: oslc4net
    - uses: nunit/docfx-action@v4.1.0
      name: Build Documentation
      with:
        args: repo/docfx.json
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: repo/_site

  deploy:
     # Add a dependency to the build job
    needs: build-docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
